---

- name: Check Developer Mode
  command:
    argv:
      - /usr/sbin/DevToolsSecurity
      - -status
  register: dev_tools_security
  changed_when: false

- name: Set xcode_developer_mode_enabled
  set_fact:
    xcode_developer_mode_enabled: "{{ dev_tools_security.stdout.find('enabled') != -1 }}"

- name: Enable Developer Mode
  become: true
  command:
    argv:
      - /usr/sbin/DevToolsSecurity
      - -enable
  when: not xcode_developer_mode_enabled

- name: Set Xcode name
  set_fact:
    xcode_name: Xcode_{{ xcode_version }}.app
    xcode_xip_name: Xcode_{{ xcode_version }}.xip

- name: Set Xcode path
  set_fact:
    xcode_path: /Applications/{{ xcode_name }}
    xcode_xip_path: /Applications/{{ xcode_xip_name }}

- name: Check if Xcode is already installed
  stat:
    path: "{{ xcode_path }}"
  register: xcode

- when: not xcode.stat.exists
  block:
    - name: Download Xcode XIP
      become: true
      get_url:
        url: "{{ xcode_xip_base_url }}/{{ xcode_xip_name }}"
        dest: "{{ xcode_xip_path }}"
        mode: 'u=rw,g=r,o=r'
      notify: clean-up-xcode-install

    # When the xip-decompression and xcodebuild-license-accept steps are done normally via Ansible tasks,
    # the process invariably hangs for a long time, after which I get an error message stating:
    #
    #   "You have not agreed to the Xcode license agreements, please run 'sudo xcodebuild -license' from within
    #   a Terminal window to review and agree to the Xcode license agreements"
    #
    # I get this even when the very first task I run after running xip is to accept the Xcode license!
    # I've tried many different approaches, and Ansible hangs every time.
    #
    # I've come to the conclusion that something in the code that Ansible sends over to the remote for every
    # task is triggering the error. So on that assumption, I copy over a script that performs the two steps.

    - name: Copy installation script
      become: true
      template:
        src: install-xcode.sh
        dest: /tmp/install-xcode.sh
        mode: 'u=rwx,g=rx,o=rx'
      notify: clean-up-xcode-install

    - name: Run Xcode installation script
      become: true
      command:
        cmd: /tmp/install-xcode.sh
      async: 7200
      poll: 60
      register: install_xcode

    - name: Install Xcode log
      debug:
        msg: "{{ install_xcode.stdout }}"

    - name: Install Xcode error log
      debug:
        msg: "{{ install_xcode.stderr }}"
      when: install_xcode.stderr != ""

    - name: Select Xcode
      become: true
      command:
        argv:
          - /usr/bin/xcode-select
          - --switch
          - "{{ xcode_pathÂ }}"
